# Task ID: 26
# Title: Vector strategy decision document
# Status: pending
# Dependencies: None
# Priority: high
# Description: Decide and document the strategy for creating and storing vector embeddings.
# Details:
Analyze whether to use a single global vector space or a separate one for each city. Document the decision, rationale, and chosen embedding model in `__docs__/architecture/vector-strategy.md`.

# Test Strategy:
Peer review of the architecture document for soundness and clarity.

# Subtasks:
## 1. Research vector space architecture requirements [pending]
### Dependencies: None
### Description: Research and document requirements for global vs per-city vector spaces, including performance, scalability, and query patterns.
### Details:
Analyze the trade-offs between a single global vector space versus separate vector spaces per city. Research considerations include: query performance across cities vs within cities, memory usage, index size, cross-city search capabilities, data isolation, and maintenance complexity. Document findings in preparation for decision analysis.

## 2. Analyze vector space approaches with trade-offs [pending]
### Dependencies: 26.1
### Description: Conduct detailed analysis of both global and per-city vector space approaches against decision criteria.
### Details:
Create a comparative analysis of global vs per-city vector spaces using criteria such as: query performance, memory efficiency, cross-city search capabilities, data isolation, operational complexity, and future scalability. Include quantitative estimates where possible (e.g., index sizes, query latency). Document pros/cons matrix and preliminary recommendations.

## 3. Select embedding model and configuration [pending]
### Dependencies: 26.2
### Description: Choose embedding model, dimensionality, and similarity metrics with detailed rationale.
### Details:
Research and select the appropriate embedding model (e.g., OpenAI text-embedding-3-small/large, sentence-transformers models), determine optimal dimensionality (512, 1024, 1536, etc.), and choose similarity metric (cosine, euclidean, dot product). Consider factors: model performance on municipal data, cost, latency, dimension efficiency, and compatibility with pgvector. Document the selection rationale and configuration parameters.

## 4. Define storage schema and indexing strategy [pending]
### Dependencies: 26.3
### Description: Design the database schema, indexing strategy, and metadata conventions for vector storage.
### Details:
Define the complete storage schema for core.item_embeddings including: table structure, vector column configuration, metadata fields (model version, created_at, etc.), indexing strategy (IVFFlat vs HNSW), index parameters (lists, ef_construction), and naming conventions. Consider alignment with Task 67 schema decisions and Task 30 dimension constraints.

## 5. Finalize vector strategy decision document [pending]
### Dependencies: 26.4
### Description: Create the complete vector strategy document with final decisions and implementation guidance.
### Details:
Compile all research and analysis into the final `__docs__/architecture/vector-strategy.md` document. Include: executive summary of decisions, detailed rationale for each choice, implementation guidance, integration points with existing tasks (26, 30, 64, 67), migration considerations, and operational recommendations. Ensure document is ready for peer review and provides clear guidance for implementation tasks.

