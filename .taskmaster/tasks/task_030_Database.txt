# Task ID: 30
# Title: Enforce embedding model and dimension guard
# Status: pending
# Dependencies: 26
# Priority: high
# Description: Add database and runtime checks to ensure embedding consistency.
# Details:
Add a `CHECK` constraint to the `core.item_embeddings` table to enforce a specific vector dimension. Also add a runtime `assert` in the embedding computation code to ensure the model being used matches the one specified in the vector strategy.

# Test Strategy:
Database: Test the migration by trying to insert a vector with the wrong dimension and confirming it fails. Runtime: Unit test the assertion logic to ensure it throws an error if the model identifier is incorrect.

# Subtasks:
## 1. Create centralized embedding configuration constants [pending]
### Dependencies: None
### Description: Define model ID and dimension constants in a centralized configuration module
### Details:
Create a configuration module that exports constants for the embedding model identifier (e.g., 'text-embedding-3-small') and vector dimensions (e.g., 768). This will serve as the single source of truth for embedding configuration across the application.

## 2. Implement database CHECK constraint for vector dimensions [pending]
### Dependencies: 30.1
### Description: Add database migration to enforce vector dimension consistency
### Details:
Create a database migration that adds a CHECK constraint to the core.item_embeddings table to ensure all vectors match the expected dimension from the configuration. Update the existing vector(768) column definition to reference the centralized dimension constant.

## 3. Build data audit system for existing embeddings [pending]
### Dependencies: 30.1
### Description: Create audit functionality to validate dimension compliance of existing embeddings
### Details:
Implement a data audit script that scans existing embeddings in the database and reports any that don't match the expected dimensions. This will help identify inconsistencies before applying the database constraint.

## 4. Add runtime guards in embedding computation services [pending]
### Dependencies: 30.1
### Description: Implement runtime validation in embedding generation code
### Details:
Add runtime assertions in the embedding computation code to verify that the model being used matches the configured model identifier and that generated vectors have the expected dimensions. Include proper error handling and logging for validation failures.

## 5. Create comprehensive test suite and CI integration [pending]
### Dependencies: 30.2, 30.3, 30.4
### Description: Develop tests for all embedding consistency guards and integrate into CI pipeline
### Details:
Create unit tests for runtime guards, integration tests for database constraints, and end-to-end tests for the complete embedding workflow. Ensure CI pipeline runs these tests and fails builds when embedding consistency is violated.

